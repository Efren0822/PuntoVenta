@model List<PuntoVenta.Models.UsuarioViewModel>
@{
    ViewBag.Title = "Usuarios";
}

<h2 class="text-2xl font-bold mb-4">@ViewBag.Title</h2>

<body class="bg-gray-100">

    <div class="container mx-auto p-4">

        <div class="flex justify-between items-center mb-4">
            <div>
                <label class="ml-4 text-gray-600">Registrar usuario</label>
                <a href="@Url.Action("Create", "Usuarios")" class="btn btn-success">Agregar usuario</a>
                
            </div>
            <div>
            <div>
                <label for="search-input" class="text-gray-600">Buscar por nombre:</label>
                <input type="text" id="search-input" placeholder="Buscar por nombre" oninput="searchUsers()"
                       class="rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 w-1/4">
            </div>

            <div>
                <label for="status-filter" class="text-gray-600">Filtrar por estado:</label>
                <select id="status-filter" onchange="searchUsers()"
                        class="rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50">
                    <option value="">Todos</option>
                    <option value="Activo">Activo</option>
                    <option value="Inactivo">Inactivo</option>
                </select>
            </div>

            <div>
                <label for="type-filter" class="text-gray-600">Filtrar por tipo de usuario:</label>
                <select id="type-filter" onchange="searchUsers()"
                        class="rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50">
                    <option value="">Todos</option>
                    <option value="Administrador">Administrador</option>
                    <option value="Usuario Normal">Usuario Normal</option>
                </select>
            </div>
            </div>
        </div>

        <div class="overflow-x-auto">
            <table class="table-auto w-full">
                <thead class="bg-gray-800 text-black">
                    <tr>
                        <th class="px-4 py-2">Nombre de Usuario</th>
                        <th class="px-4 py-2">Estado</th>
                        <th class="px-4 py-2">Tipo de Usuario</th>
                        <th class="px-4 py-2">Acciones</th>
                    </tr>
                </thead>
                <tbody id="user-table-body">
                    @foreach (var usuario in Model)
                    {
                        <tr>
                            <td class="border px-4 py-2">@usuario.strNombre</td>
                            <td class="border px-4 py-2">@usuario.NombreEstado</td>
                            <td class="border px-4 py-2">@usuario.NombreTipoUsuario</td>
                            <td class="border px-4 py-2">
                                @Html.ActionLink("Detalles", "Detalles", new { id = usuario.Id }, new { @class = "btn btn-info" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="mt-4">
            @if (ViewBag.PaginaActual > 1)
            {
                <a href="@Url.Action("Index", "Usuarios", new { pagina = 1 })" class="btn btn-primary">Primera</a>
                <a href="@Url.Action("Index", "Usuarios", new { pagina = ViewBag.PaginaActual - 1 })" class="btn btn-primary">Anterior</a>
            }

            Página @(ViewBag.PaginaActual) de @(ViewBag.TotalPaginas)

            @if (ViewBag.PaginaActual < ViewBag.TotalPaginas)
            {
                <a href="@Url.Action("Index", "Usuarios", new { pagina = ViewBag.PaginaActual + 1 })" class="btn btn-primary">Siguiente</a>
                <a href="@Url.Action("Index", "Usuarios", new { pagina = ViewBag.TotalPaginas })" class="btn btn-primary">Ultima</a>
            }
        </div>
    </div>
    <div>
        @Html.ActionLink("Regresar", "Index", "Home", null, new { @class = "btn btn-secondary" })
    </div>
</body>

<script>
    var filterValue = "";
    var statusFilterValue = "";
    var typeFilterValue = "";
    var currentPage = 1;
    var pageSize = 10;

    function searchUsers() {
        var input = document.getElementById("search-input");
        filterValue = input.value.toUpperCase();

        statusFilterValue = document.getElementById("status-filter").value.toUpperCase();
        typeFilterValue = document.getElementById("type-filter").value.toUpperCase();

        var tableBody = document.getElementById("user-table-body");
        var rows = tableBody.getElementsByTagName("tr");

        for (var i = 0; i < rows.length; i++) {
            var row = rows[i];
            var nameColumn = row.getElementsByTagName("td")[0];
            var statusColumn = row.getElementsByTagName("td")[1];
            var typeColumn = row.getElementsByTagName("td")[2];

            if (nameColumn && statusColumn && typeColumn) {
                var nameMatch = nameColumn.textContent.toUpperCase().includes(filterValue);
                var statusMatch = statusFilterValue === "" || statusColumn.textContent.toUpperCase() === statusFilterValue;
                var typeMatch = typeFilterValue === "" || typeColumn.textContent.toUpperCase() === typeFilterValue;

                row.style.display = (nameMatch && statusMatch && typeMatch) ? "" : "none";
            }
        }
    }

    function editarUsuario(id) {
        window.location.href = "/Usuarios/Editar/" + id;
    }

    function eliminarUsuario(id) {
        if (confirm("¿Estas seguro de borrar a este usuario?")) {
            fetch("/Usuarios/eliminar/" + id, {
                method: "DELETE"
            }).then(response => {
                if (response.ok) {
                    searchUsers();
                } else {
                    alert("¡Error al eliminar al usuario!");
                }
            })
        }
    }
</script>
