@model PuntoVenta.Models.Usuario

@{
    ViewBag.Title = "Crear Usuario";
}


<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h2 class="text-2xl font-bold mb-4">Crear Usuario</h2>

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="container mx-auto">
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-red-500" })

                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.strNombre, "Nombre de usuario: ",htmlAttributes: new { @class = "block text-gray-700 font-bold mb-2" })
                                    @Html.EditorFor(model => model.strNombre, new { htmlAttributes = new { @class = "form-input w-full" } })
                                    @Html.ValidationMessageFor(model => model.strNombre, "", new { @class = "text-red-500" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.strPassword, "Contraseña: ",htmlAttributes: new { @class = "block text-gray-700 font-bold mb-2" })
                                    @Html.EditorFor(model => model.strPassword, new { htmlAttributes = new { @class = "form-input w-full" } })
                                    @Html.ValidationMessageFor(model => model.strPassword, "", new { @class = "text-red-500" })
                                </div>

                                <div class="form-group">
                                    @Html.Label("Estado", "Estado", htmlAttributes: new { @class = "block text-gray-700 font-bold mb-2" })
                                    @Html.DropDownListFor(model => model.IdUsuCatEstado, (IEnumerable<SelectListItem>)ViewBag.Estado, "Seleccione...", new { @class = "form-select", id = "Id" })
                                    @Html.ValidationMessageFor(model => model.IdUsuCatEstado, "", new { @class = "text-red-500" })
                                </div>

                                <div class="form-group">
                                    @Html.Label("Tipo Usuario", "TipoUsuario", htmlAttributes: new { @class = "block text-gray-700 font-bold mb-2" })
                                    @Html.DropDownListFor(model => model.IdUsuCatTipoUsuario, (IEnumerable<SelectListItem>)ViewBag.TipoUsuario, "Seleccione...", new { @class = "form-select", id = "Id" })
                                    @Html.ValidationMessageFor(model => model.IdUsuCatTipoUsuario, "", new { @class = "text-red-500" })
                                </div>
                            </div>

                            <div class="form-group mt-4">
                                <input type="submit" value="Guardar" class="btn btn-primary" />
                                @Html.ActionLink("Regresar", "Login", "Usuarios", null, new { @class = "btn btn-secondary" })
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function validateForm() {
        var username = document.getElementById("Username").value;
        var password = document.getElementById("Password").value;

        if (username.trim() === "" || password.trim() === "") {
            Swal.fire({
                title: 'Error',
                text: 'Por favor ingrese un usuario y una contraseña',
                icon: 'error',
                confirmButtonText: 'Aceptar'
            });
        } else {
            document.getElementById("loginForm").submit();
            Swal.fire({
                title: 'Inicio de sesión exitoso',
                text: '@TempData["MensajeCrear"]',
                icon: 'success',
                confirmButtonText: 'Aceptar'
            });
        }
    }
</script>
