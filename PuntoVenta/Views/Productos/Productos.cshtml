@model List<PuntoVenta.Models.Productos.Products>
@{
    ViewBag.Title = "Productos";
}

<h2>@ViewBag.Title</h2>

<head>
    <link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />


</head>

<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">PuntoVenta</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>

                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Usuarios" asp-action="Index">Usuarios</a>

                        </li>
                       

                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Productos" asp-action="detalleVentas">Ventas</a>
                        </li>

                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="search-container">
        <input type="text" id="name-search-input" placeholder="Buscar por nombre" oninput="searchProducts()" />
        <input type="text" id="category-search-input" placeholder="Buscar por categoría" oninput="searchProducts()" />
        <input type="text" id="subcategory-search-input" placeholder="Buscar por subcategoría" oninput="searchProducts()" />
        <div>
            <label class="ml-4 text-gray-600">Registrar Producto</label>
            <a href="@Url.Action("Crear", "Productos")" class="btn btn-success">Agregar Producto</a>

        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-striped table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>Nombre del Producto</th>
                    <th>Descripción</th>
                    <th>Categoría</th>
                    <th>Subcategoría</th>
                    <th>maximo</th>
                    <th>minimo</th>
                    <th>Stock</th>
                    <th>Costo</th>
                    <th>Precio</th>
                    <th>Imagen Url</th>
                    <th>imagen</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody id="product-table-body">
                @foreach (var producto in Model)
                {
                    <tr>
                        <td>@producto.StrNombrePro</td>
                        <td>@producto.StrDescriptcion</td>
                        <td>
                            @{
                                var categoriaNombre = ViewBag.CategoriaNombres[producto.idProCatCategoria];
                                @categoriaNombre
                            }
                        </td>
                        <td>
                            @{
                                var subcategoriaNombre = ViewBag.SubcategoriaNombres[producto.idProCatSubCategoria];
                                @subcategoriaNombre
                            }
                        </td>
                        <td>@producto.decMaximo</td>
                        <td>@producto.decMinimo</td>
                        <td>@producto.decStock</td>
                        <td>@producto.curCosto</td>
                        <td>@producto.curPrecio</td>
                        <td>@producto.strUrlImage</td>
                        <td>
                            @if (producto.blodImage != null)
                            {
                                string imageBase64 = Convert.ToBase64String(producto.blodImage);
                                string imageSrc = String.Format("data:image/gif;base64,{0}", imageBase64);
                                <img src="@imageSrc" style="width:100px; height:100px;" />
                            }
                            else
                            {
                                @:No Image
                            }
                        </td>
                        <td>
                            <!-- Acciones -->
                            <button class="btn btn-danger" onclick="eliminarProducto(@producto.IdPro)">Eliminar</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div>

            <div class="mt-4">
                @if (ViewBag.PaginaActual > 1)
                {
                    <a href="@Url.Action("Productos", "Productos", new { pagina = 1 })" class="btn btn-primary">Primera</a>
                    <a href="@Url.Action("Productos", "Productos", new { pagina = ViewBag.PaginaActual - 1 })" class="btn btn-primary">Anterior</a>
                }

                Página @(ViewBag.PaginaActual) de @(ViewBag.TotalPaginas)

                @if (ViewBag.PaginaActual < ViewBag.TotalPaginas)
                {
                    <a href="@Url.Action("Productos", "Productos", new { pagina = ViewBag.PaginaActual + 1 })" class="btn btn-primary">Siguiente</a>
                    <a href="@Url.Action("Productos", "Productos", new { pagina = ViewBag.TotalPaginas })" class="btn btn-primary">Ultima</a>
                }
            </div>

            @Html.ActionLink("Regresar", "Index", "Home", null, new { @class = "btn btn-secondary" })
        </div>
    </div>
</body>
<script>
    function searchProducts() {
        var nameInput = document.getElementById("name-search-input").value.toUpperCase();
        var categoryInput = document.getElementById("category-search-input").value.toUpperCase();
        var subcategoryInput = document.getElementById("subcategory-search-input").value.toUpperCase();

        var tableBody = document.getElementById("product-table-body");
        var rows = tableBody.getElementsByTagName("tr");

        for (var i = 0; i < rows.length; i++) {
            var row = rows[i];
            var nameColumn = row.getElementsByTagName("td")[0].textContent.toUpperCase();
            var categoryColumn = row.getElementsByTagName("td")[2].textContent.toUpperCase();
            var subcategoryColumn = row.getElementsByTagName("td")[3].textContent.toUpperCase();

            var nameMatch = nameColumn.includes(nameInput);
            var categoryMatch = categoryColumn.includes(categoryInput) || categoryInput === "";
            var subcategoryMatch = subcategoryColumn.includes(subcategoryInput) || subcategoryInput === "";

            row.style.display = (nameMatch && categoryMatch && subcategoryMatch) ? "" : "none";
        }
    }

    function eliminarProducto(id) {
        if (confirm("¿Estás seguro de querer eliminar este producto?")) {
            fetch("/Productos/Eliminar/" + id, {
                method: "POST"
            }).then(response => {
                if (response.ok) {
                    // Recargar la página después de eliminar el producto
                    window.location.reload();
                } else {
                    alert("Error al eliminar el producto.");
                }
            }).catch(error => {
                console.error("Error:", error);
                alert("Error al eliminar el producto.");
            });
        }
    }
</script>
